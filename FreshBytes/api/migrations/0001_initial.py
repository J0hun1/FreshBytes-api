# Generated by Django 5.1.7 on 2025-07-21 07:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                ("category_name", models.CharField(max_length=255, unique=True)),
                ("category_description", models.CharField(default="", max_length=255)),
                ("category_isActive", models.BooleanField(default=True)),
                (
                    "category_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="category_images/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "product_id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("product_name", models.CharField(max_length=255)),
                (
                    "product_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("product_brief_description", models.CharField(max_length=255)),
                ("product_full_description", models.CharField(max_length=255)),
                (
                    "product_discountedPrice",
                    models.DecimalField(decimal_places=2, max_digits=10, null=True),
                ),
                ("product_sku", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "product_status",
                    models.CharField(
                        choices=[
                            ("ROTTEN", "Rotten"),
                            ("SLIGHTLY_WITHERED", "Slightly Withered"),
                            ("FRESH", "Fresh"),
                        ],
                        default="FRESH",
                        max_length=20,
                    ),
                ),
                ("product_location", models.CharField(max_length=255, null=True)),
                ("has_promo", models.BooleanField(default=False)),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("post_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("harvest_date", models.DateTimeField(null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("review_count", models.IntegerField(default=0)),
                ("top_rated", models.BooleanField(default=False)),
                ("is_srp", models.BooleanField(default=False)),
                ("is_discounted", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("sell_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "Products",
            },
        ),
        migrations.CreateModel(
            name="Promo",
            fields=[
                (
                    "promo_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("promo_description", models.CharField(default="", max_length=255)),
                ("promo_name", models.CharField(max_length=255)),
                (
                    "discount_type",
                    models.CharField(
                        choices=[("PERCENTAGE", "Percentage"), ("FIXED", "Fixed")],
                        default="FIXED",
                        max_length=255,
                    ),
                ),
                ("discount_amount", models.IntegerField(default=0)),
                ("discount_percentage", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "promo_start_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "promo_end_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "Promo",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("user_name", models.CharField(max_length=255)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "user_email",
                    models.EmailField(max_length=254, null=True, unique=True),
                ),
                ("password", models.CharField(max_length=128, null=True)),
                ("user_phone", models.CharField(max_length=255)),
                ("user_address", models.CharField(max_length=255)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("seller", "Seller"),
                            ("customer", "Customer"),
                        ],
                        default="customer",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "Users",
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "cart_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Cart",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "order_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "order_number",
                    models.CharField(editable=False, max_length=20, unique=True),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                (
                    "order_total",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("SHIPPED", "Shipped"),
                            ("DELIVERED", "Delivered"),
                            ("CANCELLED", "Cancelled"),
                            ("REFUNDED", "Refunded"),
                        ],
                        default="PENDING",
                        max_length=255,
                    ),
                ),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Orders",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "payment_id",
                    models.CharField(
                        editable=False,
                        max_length=12,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("GCASH", "Gcash"),
                            ("PAYMAYA", "PayMaya"),
                            ("COD", "Cash on Delivery"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("REFUNDED", "Refunded"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("payment_date", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="api.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "order_item_id",
                    models.CharField(
                        editable=False,
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("quantity", models.IntegerField(default=1)),
                (
                    "total_item_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="api.order",
                    ),
                ),
                (
                    "product_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.product",
                    ),
                ),
            ],
            options={
                "db_table": "OrderItems",
            },
        ),
        migrations.CreateModel(
            name="PromoProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
                (
                    "promo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.promo"
                    ),
                ),
            ],
            options={
                "db_table": "PromoProduct",
                "unique_together": {("promo", "product")},
            },
        ),
        migrations.AddField(
            model_name="promo",
            name="product_id",
            field=models.ManyToManyField(
                related_name="promos", through="api.PromoProduct", to="api.product"
            ),
        ),
        migrations.CreateModel(
            name="Reviews",
            fields=[
                (
                    "review_id",
                    models.CharField(
                        editable=False,
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "review_rating",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("review_comment", models.CharField(max_length=255)),
                ("review_date", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.product",
                    ),
                ),
                (
                    "user_id",
                    models.ForeignKey(
                        db_column="user_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Reviews",
            },
        ),
        migrations.CreateModel(
            name="Seller",
            fields=[
                (
                    "seller_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("business_name", models.CharField(default="", max_length=255)),
                ("business_email", models.EmailField(blank=True, max_length=254)),
                ("business_phone", models.IntegerField(default="")),
                (
                    "business_address",
                    models.CharField(default="", max_length=255, null=True),
                ),
                (
                    "total_earnings",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, null=True
                    ),
                ),
                ("total_products", models.IntegerField(default=0)),
                ("total_orders", models.IntegerField(default=0)),
                ("total_reviews", models.IntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                ("total_followers", models.IntegerField(default=0)),
                ("total_likes", models.IntegerField(default=0)),
                ("total_products_sold", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "user_id",
                    models.OneToOneField(
                        blank=True,
                        db_column="user_id",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seller_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "Seller",
            },
        ),
        migrations.AddField(
            model_name="promo",
            name="seller_id",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.seller",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="seller_id",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="api.seller"
            ),
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "sub_category_id",
                    models.CharField(
                        editable=False,
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "sub_category_name",
                    models.CharField(default="", max_length=255, unique=True),
                ),
                ("sub_category_description", models.CharField(max_length=255)),
                (
                    "sub_category_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="sub_category_images/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.category",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="product",
            name="sub_category_id",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.subcategory",
            ),
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "cart_item_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="api.cart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.product"
                    ),
                ),
            ],
            options={
                "db_table": "CartItems",
                "unique_together": {("cart", "product")},
            },
        ),
    ]
